// see on: Max_Slice_Sum from Codility
A non-empty zero-indexed array A consisting of N integers is given. A pair of integers (P, Q),
such that 0 ≤ P ≤ Q < N, is called a slice of array A. The sum of a slice (P, Q) is the total of A[P] + A[P+1] + ... + A[Q].
Find a maximum sum of a compact subsequence of array elements.


class Solution { 
 	public int solution(int[] A) {
	    int maxEndingHere = A[0];
	    int maxSoFar = A[0];
	    for(int i = 1; i < A.length; i++){
	       maxEndingHere = Math.max(A[i], maxEndingHere + A[i]);
	      //or  maxEndingHere = (A[i]> maxEndingHere + A[i])? A[i]: maxEndingHere + A[i];
	        maxSoFar = Math.max(maxSoFar, maxEndingHere);
	        //or  maxSoFar = (maxSoFar> maxEndingHere)? maxSoFar:maxEndingHere;
	    }
	    return maxSoFar;
	}
